@page
@model CRM.Areas.Admin.Pages.Order.OrderManagerModel
@{
    Layout = null;
}
@Html.AntiForgeryToken()
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
<!doctype html>

<html lang="en" dir="ltr" id="masterPageId" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg">

<head>
    
     <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css" />
    <link href="~/css/devextreme/dx.common.css" rel="stylesheet" />
    <link href="~/css/devextreme/dx.light.css" rel="stylesheet" />
    @*<script type='text/javascript' src='https://knockoutjs.com/downloads/knockout-3.5.0.debug.js'></script>
        <script src="~/lib/jquery/dist/jquery.js"></script>
        <script type='text/javascript' src='https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.12.1/jquery-ui.min.js'></script>
        <script src="~/js/devextreme/jquery.js"></script>
        <script src="~/js/devextreme/bootstrap.js"></script>
        <script src="~/js/devextreme/dx.all.js"></script>
        <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
        <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>*@
    <script type='text/javascript' src='https://knockoutjs.com/downloads/knockout-3.5.0.debug.js'></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script type='text/javascript' src='https://cdn.jsdelivr.net/npm/jquery-ui-dist@1.12.1/jquery-ui.min.js'></script>

    @*<script src="~/Admin/lib/popper/js/popper.js"></script>*@
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/js/devextreme/dx.all.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
   <partial name="_Links"/>
   <style>
    @@media (min-width: 576px)
.modal-dialog {
    max-width: none !important;
        
}

</style>
@*           <link href="~/assets/css/custom-rtl.min.css" rel="stylesheet" type="text/css" />
*@    </head>
    <body id="masterbodyid">
 <!-- Begin page -->
    <div id="layout-wrapper">
       <partial name="_menu" />

        <!-- ============================================================== -->
        <!-- Start right Content here -->
        <!-- ============================================================== -->
        <div class="main-content">

            <div class="page-content">
                <div class="container-fluid">
                    <partial name="_page_title" />

                    <div class="row">
    <div class="col-xl-4 col-md-6">
        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["Initated"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.InitatedCount">0</span>
                        </h4>

                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-success rounded fs-3">
                            <i class="bx bx-user-circle text-warning"></i>
                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->

    <div class="col-xl-4 col-md-6">
        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["Paid"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.PaidCount">0</span>
                        </h4>

                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-info rounded fs-3">
                            <i class="bx bx-shopping-bag text-info"></i>
                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->
    <div class="col-xl-4 col-md-6">
        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["Not Paid"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.Notpaid">0</span>
                        </h4>
                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-primary rounded fs-3">
                            <i class="bx bx-wallet text-primary"></i>
                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->
</div>
<div class="row">
    <div class="col-xl-4 col-md-6">

        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["Processing"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.Processing">0</span>
                        </h4>
                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-warning rounded fs-3">
                            <i class="bx bx-shopping-bag text-info"></i>

                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->
    <div class="col-xl-4 col-md-6">

        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["Packing"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.Packing">0</span>
                        </h4>
                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-warning rounded fs-3">
                            <i class="bx bx-dollar-circle text-success"></i>

                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->

    <div class="col-xl-4 col-md-6">

        <!-- card -->
        <div class="card card-animate">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 overflow-hidden">
                        <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                            @sharedResource["OnDelivery"]
                        </p>
                    </div>

                </div>
                <div class="d-flex align-items-end justify-content-between mt-4">
                    <div>
                        <h4 class="fs-22 fw-semibold ff-secondary mb-4">
                            <span class="counter-value" data-target="@Model.Ondelivery">0</span>
                        </h4>
                    </div>
                    <div class="avatar-sm flex-shrink-0">
                        <span class="avatar-title bg-soft-warning rounded fs-3">
                            <i class="bx bx-dollar-circle text-success"></i>

                        </span>
                    </div>
                </div>
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->
</div> <!-- end row-->

<div class="row">
    <div class="col-xxl-12 col-xl-12">
        <div class="card card-height-100">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">@sharedResource["Orders"]</h4>
                <div class="flex-shrink-0">
                    <a  href="/admin/Configurations/ManageCreateOrder/CreateOrder" class="btn btn-soft-primary">
                       @sharedResource["Create Order"] 
                    </a>
                </div>
            </div>
            <!-- end card header -->
            <!-- card body -->
            <div class="card-body">
                @(Html.DevExtreme().DataGrid<CRM.Models.OrderView>()
                    .ID("gridContainer")
                    .DataSource(ds => ds.Mvc()
                    .Controller("DataGridProvider")
                    .LoadAction("GetrAllOrder")
                    .Key("OrderId")
                    )
                    .Columns(columns =>
                    {
                                            columns.AddFor(m => m.CustomerName).Visible(true).Caption(sharedResource["Customer"]);
                                            columns.AddFor(m => m.CustomerEmail).Visible(true).Caption(sharedResource["Email"]);
                                            columns.AddFor(m => m.CustomerPhone).Visible(true).Caption(sharedResource["Phone"]);
                       columns.AddFor(m => m.OrderId).Visible(true).SortOrder(SortOrder.Desc).Caption(sharedResource["Order Id"]);
  columns.AddFor(m => m.OrderDate).Visible(true).Fixed(true).Caption(sharedResource["Order Date"]);
  columns.AddFor(m => m.OrderSerial).Visible(false).Caption(sharedResource["Order Serial"]);
  columns.AddFor(m => m.OrderStatus).Visible(true).Fixed(true).Caption(sharedResource["Status"]);
  columns.AddFor(m => m.CustomerId).Visible(false);
  
  columns.AddFor(m => m.OrderStatusId).Visible(false);
  columns.AddFor(m => m.IsCanceled).Visible(false);
  columns.AddFor(m => m.IsDeliverd).Visible(false);
  columns.AddFor(m => m.Notes).Visible(true).Caption(sharedResource["Notes"]);
  columns.AddFor(m => m.PaymentMethodId).Visible(false);
  columns.AddFor(m => m.PaymentMethodTitleEn).Visible(true).Caption(sharedResource["Payment Method"]);
  columns.AddFor(m => m.PaymentMethodTitleAr).Visible(false);
  columns.AddFor(m => m.CustomerAddressId).Visible(false);
  columns.AddFor(m => m.CountryId).Visible(false);
  columns.AddFor(m => m.CountryTitleEn).Visible(false);
  columns.AddFor(m => m.CountryTitleAr).Visible(false);
  columns.AddFor(m => m.IsPaid).Visible(true).Caption(sharedResource["IsPaid"]);
  columns.AddFor(m => m.UniqeId).Visible(false);
  columns.AddFor(m => m.PaymentID).Visible(true).Caption(sharedResource["PaymentID"]);
  columns.AddFor(m => m.PostDate).Visible(false);
  columns.AddFor(m => m.CustomerAddressCity).Visible(true).Caption(sharedResource["CustomerAddressCity"]);
  columns.AddFor(m => m.CustomerAddressArea).Visible(true).Caption(sharedResource["CustomerAddressArea"]);
  columns.AddFor(m => m.CustomerAddressAddress).Visible(true).Caption(sharedResource["CustomerAddressAddress"]);
  columns.AddFor(m => m.CustomerAddressBuildingNo).Visible(true).Caption(sharedResource["CustomerAddressBuildingNo"]);
  columns.AddFor(m => m.CustomerAddressMobile).Visible(true).Caption(sharedResource["CustomerAddressMobile"]);
  columns.AddFor(m => m.CustomerNCustomerId).Visible(false);
  columns.AddFor(m => m.ShippingLabel).Visible(false);
  columns.AddFor(m => m.ShippingNo).Visible(true).Caption(sharedResource["ShippingNo"]);
  columns.AddFor(m => m.OrderTotal).Visible(true).Caption(sharedResource["OrderTotal"]);
  columns.AddFor(m => m.CouponId).Visible(false);
  columns.AddFor(m => m.CouponTypeId).Visible(false);
  columns.AddFor(m => m.CouponAmount).Visible(true).Caption(sharedResource["CouponAmount"]);
  columns.AddFor(m => m.DiscountAmount).Visible(true).Caption(sharedResource["DiscountAmount"]);
  columns.AddFor(m => m.Deliverycost).Visible(true).Caption(sharedResource["Deliverycost"]);
  columns.AddFor(m => m.tax).Visible(true).Caption(sharedResource["tax"]);
  columns.AddFor(m => m.OrderNet).Visible(true).Caption(sharedResource["OrderNet"]);
  columns.AddFor(m => m.OrderDiscount).Visible(true).Caption(sharedResource["OrderDiscount"]);

  columns.AddFor(m => m.TotalAfterDiscount).Visible(true).Caption(sharedResource["TotalAfterDiscount"]);


                        columns.Add().Fixed(true).Caption(sharedResource["Actions"]).Width(200).Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <a onclick="onViewClick('<%- data.OrderId %>')"
                                   class="text-primary d-inline-block">
                                    <i class="ri-eye-fill fs-16"></i>
                                </a>

                                <a class="text-primary d-inline-block">
                                    <i onclick="onPrintClick('<%- data.OrderId %>')" class="ri-printer-line"></i>
                                </a>
                                                    <a href="/Admin/Configurations/ManageOrder/EditOrder?Id=<%- data.OrderId %>"
                                   class="text-primary d-inline-block">
                                    <i class="ri-pencil-fill fs-16"></i>
                                </a>
                            </div>
                        </text>);
                    })
                                        .MasterDetail(md =>
                                        {
                                            md.Enabled(true);
                                            md.Template(@<text>
                                                <div class="master-detail-caption">@sharedResource["Items"]:</div>
                                                @(Html.DevExtreme().DataGrid<CRM.Models.ItemView>()
                                                                            .ColumnAutoWidth(true)
                                                                            .ShowBorders(true)
                                                                            .Columns(columns =>
                                                                            {
                                                    columns.AddFor(m => m.ItemTitle).Caption(sharedResource["Item Title"]);

                                                    columns.AddFor(m => m.ItemPrice).Caption(sharedResource["Item Price"]);

                                                    columns.AddFor(m => m.ItemQuantity).Caption(sharedResource["Item Quantity"]);

                                                    columns.AddFor(m => m.Total).Caption(sharedResource["Total"]);

                                                   
                                                })
                                                                            .DataSource(d => d.Mvc()
                                                                            .Controller("DataGridProvider")
                                                                            .LoadAction("OrderItems")
                                                                            .LoadParams(new { OrderId = new JS("data.OrderId") })
                                                                            )
                                                                            )
                                                </text>);
                                        })
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    .OnExporting("exporting")
                    .RowAlternationEnabled(true)
                    .RemoteOperations(false)
                    .FilterRow(f => f.Visible(true))
                    .HeaderFilter(f => f.Visible(true))
                    .GroupPanel(p => p.Visible(true))
                    .Scrolling(scrolling => scrolling.RowRenderingMode(GridRowRenderingMode.Virtual))
                    .Selection(s => s.Mode(SelectionMode.Multiple))
                    .Paging(paging => paging.PageSize(10))
                    .AllowColumnReordering(true)
                    .AllowColumnResizing(true)
                    .ColumnAutoWidth(true)
                    .ShowBorders(true)
                    .ColumnChooser(c => c.Enabled(true))
                    .ColumnFixing(c => c.Enabled(true))
                    .ShowBorders(true)
                    .Grouping(g => g.AutoExpandAll(false))
                    .Pager(pager =>
                    {
                        pager.Visible(true);
                        pager.DisplayMode(GridPagerDisplayMode.Full);
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new JS("[5,10,20,50,100,'all']"));
                        pager.ShowInfo(true);
                        pager.ShowNavigationButtons(true);
                    })
                    .SearchPanel(searchPanel => searchPanel
                    .Visible(true)
                    .Width(240)
                    .Placeholder(sharedResource["SearchTxt"]))

                    .RemoteOperations(true)
                    .RtlEnabled(bool.Parse(sharedResource["Direction"]))
                    )


                @* PopUp *@

                @(Html.DevExtreme().Popup()
                    .ID("ViewPopup")
                    .Width(360)
                    .Height(320)
                    .Visible(false)
                    .Title("Downtown Inn")
                    .CloseOnOutsideClick(true)
                    .ShowCloseButton(true)
                    .ContentTemplate(new TemplateName("popup-template"))
                    .ToolbarItems(barItems =>
                    {
                        barItems.Add()
                        .Toolbar(Toolbar.Bottom)
                        .Location(ToolbarItemLocation.Center)
                        .Widget(widget => widget.Button()
                        .Text("Print")
                        .Type(ButtonType.Default)
                        .StylingMode(ButtonStylingMode.Contained)
                        .Width(300)
                        .OnClick("hidePopup")
                        );
                    })
                    )


                @using (Html.DevExtreme().NamedTemplate("popup-template"))
                {
                    @(Html.DevExtreme().ScrollView()
                        .Width("100%")
                        .Height("100%")
                        .Content(@<text>
                            <div class="caption">Description</div>
                            In the heart of LA&apos;s business district, the Downtown Inn has a welcoming staff
                            and award winning restaurants that remain open 24 hours a day.
                            Use our conference room facilities to conduct meetings and have a drink
                            at our beautiful rooftop bar.
                            <br><br>
                            <div class="content">
                                <div>
                                    <div class="caption">Features</div>
                                    <div>Concierge</div>
                                    <div>Restaurant</div>
                                    <div>Valet Parking</div>
                                    <div>Fitness Center</div>
                                    <div>Sauna</div>
                                    <div>Airport Shuttle</div>
                                </div>
                                <div>
                                    <div class="caption">Rooms</div>
                                    <div>Climate control</div>
                                    <div>Air conditioning</div>
                                    <div>Coffee/tea maker</div>
                                    <div>Iron/ironing</div>
                                </div>
                            </div>
                        </text>)
                        )
                }


            </div>
            <!-- end card body -->
        </div><!-- end card -->
    </div>
</div>
                </div>
            </div>
            <partial name="_footer"/>
            
        </div>

    </div>
    <!-- END layout-wrapper -->
 @*   @Html.Partial("_customizer.cshtml")*@
  <partial name="_vendor_scripts"/>
     <partial name="_ValidationScriptsPartial" />

  
   

    @await Component.InvokeAsync("NToastNotify")
    <partial name="_OrderDetailsModal" model="@Model.order" />
<partial name="_EditOrderStatusPopup" model="@Model.order" view-data="ViewData" />




<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.10.1/polyfill.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.8.0/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>



<script>

    //window.addEventListener('DOMContentLoaded', (event) => {
    //    if (localStorage.getItem("lang") != "") {

    //        if (localStorage.getItem("lang") == "ar") {
    //            console.log("In Page")
    //            dataGrid = $("#gridContainerID").dxDataGrid("instance");
    //            //dataGrid.option("rtlEnabled", isRTL);
    //            //dataGrid.option("searchPanel.placeholder", (isRTL) ? "بحث" : "Search...");
    //            //dataGrid = $("#AssetLookupListId").dxDataGrid("instance");
    //            dataGrid.option("rtlEnabled", true);
    //        }
    //    }
    //});

    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Orders');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                var currentdate = new Date();
                var datetime = currentdate.getDate() + "_"
                    + (currentdate.getMonth() + 1) + "_"
                    + currentdate.getFullYear() + "_"
                    + currentdate.getHours() + "_"
                    + currentdate.getMinutes() + "_"
                    + currentdate.getSeconds();
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Orders_' + datetime + '.xlsx');
            });
        });
        e.cancel = true;
    }

    function onViewClick(orderId) {

        console.log(orderId);

      

        $.ajax({
            type: "GET",
            url: "/admin/Order/OrderManager?handler=SingleOrderDetailsForView",
            data: { "OrderId": orderId },
            contentType: "application/json",
            dataType: "json",

            success: function (response) {

                console.log(response)
                const container = document.getElementById('orderDetailsContainer');

                let orderListHtml = '';
                for (let i = 0; i < response.OrderList.length; i++) {
                    const item = response.OrderList[i];
                    console.log(item + "OrderList")
                    const TotalAmount = item.Total;
                    console.log(TotalAmount)
                    console.log(item.ItemImage)
                    orderListHtml += `
                              <tr>
                                <td>
                                  <div class="d-flex">
                                    <div class="flex-shrink-0 avatar-md bg-light rounded p-1">
                                      <img src="${item.ItemImage || ''}" alt="" class="img-fluid d-block">
                                    </div>
                                    <div class="flex-grow-1 ms-3">
                                      <h5 class="fs-16">${item.ItemTitleEn || ''}</h5>
                                    </div>
                                  </div>
                                </td>
                                <td>${item.ItemPrice}
                                  ${response.BrowserCulture === 'en-US' ? `<span>${response.currencyName}</span>` : `<span>${response.currencyNameAR}</span>`}
                                </td>
                                <td>${item.ItemQuantity}</td>
                                <td class="fw-medium text-end">${TotalAmount}
                                  ${response.BrowserCulture === 'en-US' ? `<span>${response.currencyName}</span>` : `<span>${response.currencyNameAR}</span>`}
                                </td>
                              </tr>
                            `;
                }


                container.innerHTML = ` <div class="col-xl-9">
                                                <div class="card">
                                                    <div class="card-header">
                                                       <div class="d-flex align-items-center">
                                                                <h5 class="card-title flex-grow-1 mb-0">${response.OrderReceipt.OrderId}</h5>
                                            ${response.OrderReceipt.OrderStatusId === 2 || response.OrderReceipt.OrderStatusId === 5 || response.OrderReceipt.OrderStatusId === 6 || response.OrderReceipt.OrderStatusId === 7 ?
                        `<div class="flex-shrink-0">
                             <a style=" margin-right: 1rem;" href="/Admin/Configurations/ManageReport/MergeReport?id=${response.OrderReceipt.OrderId}" class="btn btn-success btn-sm">
                               <i class="ri-download-2-fill align-middle me-1"></i>@sharedResource["Reports"]
                             </a>
                           </div>`
                        : ''}

                       <a style=" margin-right: 1rem;" href="/Admin/Configurations/ManageOrder/EditOrder?id=${response.OrderReceipt.OrderId}" class="btn btn-success btn-sm">
                               <i class="ri-pencil-fill align-middle me-1"></i>@sharedResource["Edit"]
                             </a>

                              <a style=" margin-right: 1rem;" onclick="SendSMS(${response.OrderReceipt.OrderId})" class="btn btn-success btn-sm">
                               <i class="ri-message-2-line align-middle me-1"></i>@sharedResource["Send SMS"]
                             </a>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive table-card">
                                    <table class="table table-nowrap align-middle table-borderless mb-0">
                                        <thead class="table-light text-muted">
                                            <tr>
                                                <th scope="col">@sharedResource["Product Details"]</th>
                                                <th scope="col">@sharedResource["Item Price"]</th>
                                                <th scope="col">@sharedResource["Quantity"]</th>
                                                <th scope="col" class="text-end">@sharedResource["Total Amount"]</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                       ${orderListHtml}


                                                <tr class="border-top border-top-dashed">
                                                                            <td colspan="3"></td>
                                                                            <td colspan="2" class="fw-medium p-0">
                                                                                <table class="table table-borderless mb-0">
                                                                                    <tbody>
                                                                                              <tr>
                                    <td>@sharedResource["Sub Total:"]</td>
                                <td class="text-end">${response.OrderReceipt.OrderTotal}
                                     ${response.BrowserCulture === "en-US"
                        ? `<span>${response.currencyName}</span>`
                        : ` <span>${response.currencyNameAR}</span>`
                    }


                               </td>
                              </tr>
                              <tr>
                                    <td>@sharedResource["Tax :"] (${response.taxpercentage} %)</td>
                                ${response.Tax === 0 ?
                        `<td class="text-end">
                                     ${response.OrdernetByTax}
                                   </td>`
                        : response.Tax <= 1 ?
                            (response.BrowserCulture === "en-US" ?
                                `<td class="text-end">
                                         ${response.OrdernetByTax}
                                         <span>${response.currencyName}</span>
                                       </td>`
                                :
                                `<td class="text-end">
                                         ${response.OrdernetByTax}
                                         <span>${response.currencyNameAR}</span>
                                       </td>`)
                            :
                            (response.BrowserCulture === "en-US" ?
                                `<td class="text-end">
                                         ${response.OrdernetByTax}
                                         <span>${response.currencyName}</span>
                                       </td>`
                                :
                                `<td class="text-end">
                                         ${response.OrdernetByTax}
                                         <span>${response.currencyNameAR}</span>
                                       </td>`)
                    }
                              </tr>
                              <tr>
                                    <td>@sharedResource["Shipping Cost :"]</td>
                                <td class="text-end">
                                  ${response.ShippingCost}


                     ${response.BrowserCulture === "en-US"
                        ? `<span>${response.currencyName}</span>`
                        : ` <span>${response.currencyNameAR}</span>`
                    }                </td>
                              </tr>
                              <tr>
                                    <td>@sharedResource["Discount"] <span class="text-muted">@sharedResource["(Mashar)"]</span> :</td>
                                ${response.OrderReceipt.OrderDiscount === 0 && response.OrderReceipt.DiscountAmount === 0 ?
                        `<td class="text-end">${response.OrderReceipt.OrderDiscount}</td>`
                        :
                        `<td class="text-end">
                                     ${response.DiscountAmount}

         ${response.BrowserCulture === "en-US"
                                ? `<span>${response.currencyName}</span>`
                                : ` <span>${response.currencyNameAR}</span>`
                            }                                   </td>`
                    }
                              </tr>
                              <tr class="border-top border-top-dashed">
                                    <th scope="row">@sharedResource["Total :"]</th>
                                <th class="text-end">${response.approximatedNumber}

                 ${response.BrowserCulture === "en-US"
                        ? `<span>${response.currencyName}</span>`
                        : ` <span>${response.currencyNameAR}</span>`
                    }
                                </th>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                    </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div><!--end card-->
                                                   <div class="card">
                      <div class="card-header">
                        <div class="d-sm-flex align-items-center">
                          <h5 class="card-title flex-grow-1 mb-0">@sharedResource["Order Status"]</h5>
                          <span class="d-sm-flex align-items-center">
                          <a class="edit-item-btn" href="javascript:void(0)" data-bs-toggle="modal">
                            <i class="ri-pencil-fill align-bottom text-muted" onclick="editOrderStatusButtonClick(${response.OrderReceipt.OrderId})"></i>
                        </a>
                </span>
                        </div>
                      </div>
                      <div class="card-body">
                        <div class="profile-timeline">
                          <div class="accordion accordion-flush" id="accordionFlushExample">
                            ${response.OrderTraking.map(item => `
                              <div class="accordion-item border-0">
                                <div class="accordion-header" id="headingOne">
                                  <a class="accordion-button p-2 shadow-none" data-bs-toggle="collapse" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    <div class="d-flex align-items-center">
                                      <div class="flex-shrink-0 avatar-xs">
                                        <div class="avatar-title bg-success rounded-circle">
                                          <i class="ri-shopping-bag-line"></i>
                                        </div>
                                      </div>
                                      <div class="flex-grow-1 ms-3">
                                        <h6 class="fs-15 mb-0 fw-semibold">${item.Status} - <span class="fw-normal">${item.ActionDate}</span></h6>
                                      </div>
                                    </div>
                                  </a>
                                </div>
                                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                                  <div class="accordion-body ms-2 ps-5 pt-0">
                                    <h6 class="mb-1">${item.Status}</h6>
                                    <p class="text-muted">${item.ActionDate}</p>
                                  </div>
                                </div>
                              </div>
                            `).join('')}
                          </div><!--end accordion-->
                        </div>
                      </div>
                    </div><!--end card-->

                    </div><!--end col-->

                          <div class="col-xl-3">
                              ${response.OrderReceipt.OrderStatusId == 5 || response.OrderReceipt.OrderStatusId == 6 || response.OrderReceipt.OrderStatusId == 7
                        ? `
                                <div class="card">
                                  <div class="card-header">
                                    <div class="d-flex">
                                      <h5 class="card-title flex-grow-1 mb-0"><i class="mdi mdi-truck-fast-outline align-middle me-1 text-muted"></i> @sharedResource["Logistics Details"]</h5>
                                      <div class="flex-shrink-0">
                                        <a href="javascript:void(0);" class="badge badge-soft-primary fs-12">@sharedResource["Shipping Order"]</a>
                                      </div>
                                    </div>
                                  </div>
                                  <div class="card-body">
                                    <div class="text-center">
                                      <lord-icon src="https://cdn.lordicon.com/uetqnvvg.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:80px;height:80px"></lord-icon>
                                      <h5 class="fs-16 mt-2">@sharedResource["Shipping Info"]</h5>
                                      <p class="text-muted mb-0">@sharedResource["No:"] ${response.OrderReceipt.ShippingNo}</p>
                                    </div>
                                  </div>
                                </div><!--end card-->
                              `
                        : ''}
                              <div class="card">
                                <div class="card-header">
                                  <div class="d-flex">
                                    <h5 class="card-title flex-grow-1 mb-0">@sharedResource["Customer Details"]</h5>
                                  </div>
                                </div>
                                <div class="card-body">
                                  <ul class="list-unstyled mb-0 vstack gap-3">
                                    <li>
                                      <div class="d-flex align-items-center">
                                        <div class="flex-grow-1 ms-3">
                                          <h6 class="fs-15 mb-1">${response.Customer.CustomerName}</h6>
                                          <p class="text-muted mb-0">@sharedResource["Customer"]</p>
                                        </div>
                                      </div>
                                    </li>
                                    <li><a href="mailto:${response.Customer.Email}"><i class="ri-mail-line me-2 align-middle text-muted fs-16"></i>${response.Customer.Email}</a></li>
                                    <li><a href="tel:${response.Customer.Phone}"><i class="ri-phone-line me-2 align-middle text-muted fs-16"></i>${response.Customer.Phone}</a></li>
                                  </ul>
                                </div>
                              </div><!--end card-->
                              <div class="card">
                                <div class="card-header">
                                  <h5 class="card-title mb-0"><i class="ri-map-pin-line align-middle me-1 text-muted"></i>@sharedResource["Billing Address"]</h5>
                                </div>
                                <div class="card-body">
                                  <ul class="list-unstyled vstack gap-2 fs-14 mb-0">
                                    ${(function () {
                        const Address = response.customerAddress.CityName + " , " + response.customerAddress.AreaName;
                        const Street = response.customerAddress.BuildingNo + " , " + response.customerAddress.Address;
                        return `
                                          <li class="fw-semibold fs-15">${response.Customer.CustomerName}</li>
                                          <li>${Address}</li>
                                          <li>${Street}</li>
                                        `;
                    })()
                    }
                                  </ul>
                                </div>
                              </div><!--end card-->
                              <div class="card">
                                <div class="card-header">
                                  <h5 class="card-title mb-0"><i class="ri-map-pin-line align-middle me-1 text-muted"></i>@sharedResource["Shipping Address"]</h5>
                                </div>
                                <div class="card-body">
                                  <ul class="list-unstyled vstack gap-2 fs-14 mb-0">
                                    ${(function () {
                        const ShippingAddress = response.customerAddress.CityName + " , " + response.customerAddress.AreaName;
                        const ShippingStreet = response.customerAddress.BuildingNo + " , " + response.customerAddress.Address;
                        return `
                                          <li class="fw-semibold fs-15">${response.Customer.CustomerName}</li>
                                          <li>${ShippingAddress}</li>
                                          <li>${ShippingStreet}</li>
                                        `;
                    })()
                    }
                                  </ul>
                                </div>
                              </div><!--end card-->
                            </div><!--end col-->`

                $('#showOrderDetailsModal').modal('show');

            },
            failure: function (response) {
                alert(response);
            }
        });



        //showPopup(e.row.data);
    }
    function onPrintClick(orderId) {
        console.log(orderId);
        $.ajax({
            type: "GET",
            url: "/admin/Order/OrderManager?handler=Print",
            data: { "orderId": orderId },
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                var targetFile = window.open('http://' + location.host + "/" + response.ShippingLabel);
                var repotfile = window.open('http://' + location.host + "/Admin/Configurations/ManageReport/MergeReport?id=" + response.OrderId);

                targetFile.print();
                //repotfile.print();


            },
            failure: function (response) {
                alert(response);
            }
        });
    }
    function onEditClick(e) {
        console.log(e.row.data.OrderId);
    }

                    //function showPopup(e) {
                    //    console.log(e);
                    //    $("#ViewPopup").dxPopup("show");
                    //}

                    function hidePopup(e) {
                        $("#ViewPopup").dxPopup("hide");
                    }

                    function SendSMS(OrderId){
                           $.ajax({
            type: "GET",
            url: "/admin/Order/OrderManager?handler=SendSMSForOrder",
            data: { "OrderId": OrderId },
            contentType: "application/json",
            dataType: "json",
             //beforeSend: function (xhr) {
             //       xhr.setRequestHeader("XSRF-TOKEN",
             //           $('input:hidden[name="__RequestVerificationToken"]').val());
             //   },

             //   headers: {
             //       RequestVerificationToken:
             //           $('input:hidden[name="__RequestVerificationToken"]').val()
             //   },
            success: function (response) {
               
                window.location.reload()


            },
            failure: function (response) {
                alert(response);
            }
        });
                    }

                     function editOrderStatusButtonClick(OrderId) {
        console.log(OrderId);


        $.ajax({
            type: "GET",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            }
            ,
            url: "/Admin/Order/OrderManager?handler=SingleorderstatusForEdit",

            data: { "OrderId": OrderId },
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                console.log(response);
                document.getElementById("OrderStatusId").value = response.OrderId
                document.getElementById("editstatusId").value = response.OrderStatusId
                
                $('#showEditorderstatusModal').modal('show');


            },

            failure: function (response) {
                alert(response);
            }
        });
    }
</script>
</body>
</html>
